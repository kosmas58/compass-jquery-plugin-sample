!!!
/
  A tabs control against HTML markup, using {{wrap}}
%html{:xmlns => "http://www.w3.org/1999/xhtml"}
  %head
    %title A tabs control against HTML markup, using {{wrap}}
    %link{:href => "resources/tabs.css", :rel => "stylesheet", :type => "text/css"}/
  %body
    %h1 Tabs
    #tabsView ..loading
    %script{:src => "http://code.jquery.com/jquery.js", :type => "text/javascript"}
    %script{:src => "../../../jquery.tmpl.js", :type => "text/javascript"}
    %script#tabsTmpl{:type => "text/x-jquery-tmpl"}
      {{wrap(null, {state: state}) "#tabsWrap"}}
      %h3 Inline
      %div
        Rendering a
        %span.special template
        declared in script block
      %h3 String
      %div
        Rendering a
        %span.special template
        passed as a string
      %h3 Remote
      %div
        Rendering remote data using
        %span.special templates
      {{/wrap}}
    %script#tabsWrap{:type => "text/x-jquery-tmpl"}
      %table.tabsView
        %tbody
          %tr
            {{each tabs()}}
            %th{:class => "${headerClass($index)}"}
              ${$value}
            {{/each}}
          %tr
            %td{:colspan => "${tabCount()}"}
              .body
                {{html tabContent()}}
    :javascript
      var state = { activeIndex: 0 };

      // ******************** Load UI ********************

      $( "#tabsView" ).empty();
      $( "#tabsTmpl" ).tmpl().appendTo( "#tabsView" );

      // ******************** Events ********************

      $( "#tabsView" )
      	.delegate( ".header_false", "click", function() {
      		var ti = $.tmplItem( this );
      		ti.state.activeIndex = $(this).index();
      		ti.update();
      	});

      // ******************** Helper functions ********************

      function tabs() {
      	return this.html("h3", true);
      }
      function tabCount() {
      	return this.html("h3").length;
      }
      function headerClass( index ) {
      	return index === this.state.activeIndex ? "header_true" : "header_false";
      }

      function tabContent() {
      	return this.html("div")[this.state.activeIndex];
      }


-@title = "jQuery Mobile Docs - Linking Pages"
= render :partial => "/mobile/index.js.haml", :format => :js

.type-interior{"data-role" => "page"}
  %div{"data-role" => "header", "data-theme" => "f"}
    %h1 Linking Pages
    %a.ui-btn-right.jqm-home{"data-direction" => "reverse", "data-icon" => "home", "data-iconpos" => "notext", :href => "/mobile"} Home
  / /header
  %div{"data-role" => "content"}
    .content-primary
      %h2 Linking pages
      %p jQuery Mobile is designed to work with simple page linking conventions. Essentially, you can link pages and assets as you normally would, and jQuery Mobile will automatically handle page requests in a single-page model, using Ajax when possible. When Ajax isn't possible (such as a non-same-domain url, or if specified using certain attributes on the link), a normal http request is used instead.
      %p The goal of this model is to allow developers to create websites using best practices &mdash; where ordinary links will "just work" without any special configuration &mdash; while creating a rich, native-like experience that can't be achieved with standard HTTP requests.
      %h2 Default link behavior: Ajax
      %p
        To enable animated page transitions, all links that point to an external page (ex. products.html) will be loaded via Ajax. To do this unobtrusively, the framework parses the link's
        %code href
        to formulate an Ajax request (Hijax) and displays the loading spinner. All this happens automatically by jQuery Mobile.
      %p If the Ajax request is successful, the new page content is added to the DOM, all mobile widgets are auto-initialized, then the new page is animated into view with a page transition.
      %p
        If the Ajax request fails, the framework will display a small error message overlay (styled in the "e" swatch) that disappears after a brief time so this doesn't break the navigation flow. View an
        = succeed "." do
          %a{:href => "notapage.html"} example of the error message
      %h2 Linking without Ajax
      %p
        Links that point to other domains or that have
        = succeed "," do
          %code rel="external"
        %code data-ajax="false"
        or
        %code target
        attributes will not be loaded with Ajax. Instead, these links will cause a full page refresh with no animated transition. Both attributes (
        %code rel="external"
        and
        = succeed ")" do
          %code data-ajax="false"
        have the same effect, but a different semantic meaning:
        %code rel="external"
        should be used when linking to another site or domain, while
        %code data-ajax="false"
        is useful for simply opting a page within your domain from being loaded via Ajax. Because of security restrictions, the framework always opts links to external domains out of the Ajax behavior.
      %p
        Note: When building a jQuery Mobile application where the Ajax navigation system is disabled globally or frequently disabled on individual links, we  recommend disabling the
        %code $.mobile.pushStateEnabled
        global
        %a{:href => "/mobile/docs/api/globalconfig"} configuration option
        to avoid inconsistent navigation behavior in some browsers.
      %h2 Linking within a multi-page document
      %p
        A single HTML document can contain one or many 'page' containers simply by stacking multiple divs with a
        %code data-role
        of
        = succeed "." do
          %code "page"
        This allows you to build a small site or application within a single HTML document; jQuery Mobile will simply display the first 'page' it finds in the source order when the page loads.
      %p
        If a link in a multi-page document points to an anchor (
        %code> #foo
        ), the framework will look for a page wrapper with that ID (
        %code> id="foo"
        ). If it finds a page in the HTML document, it will transition the new page into view. You can seamlessly navigate between local, internal "pages" and external pages in jQuery Mobile. Both will look the same to the end user except that external pages will display the Ajax spinner while loading. In either situation, jQuery Mobile updates the page's URL hash to enable Back button support, deep-linking and bookmarking.
      %p
        It's important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a
        %code rel="external"
        or
        %code data-ajax="false"
        to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (
        %code> #
        ) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.
      %p For example, a link to a page containing multiple internal pages would look like this:
      %code &lt;a href=&quot;multipage.html&quot; rel=&quot;external&quot;&gt;Multi-page link&lt;/a&gt;
      %h2 "Back" button links
      %p
        If you use the attribute
        %code data-rel="back"
        on an anchor, any clicks on that anchor will mimic
        the back button, going back one history entry and ignoring the anchor's default href. This is
        particularly useful when generating "back" buttons with JavaScript, such as a button to close a dialog.
        When using this feature in your source markup, although browsers that support this feature will not use
        the specified
        %code href
        attribute,
        = succeed "." do
          %strong
            be sure to still provide a meaningful value that
            actually points to the URL of the referring page to allow the feature to work for users in C-Grade
            browsers
        If users can reach this page from more than one referring pages, specify a
        sensible
        %code href
        so that the navigation remains logical for all users. Also, please keep in
        mind that if you just want a reverse transition without actually going back in history, you should use
        the
        %code data-direction="reverse"
        attribute instead.
      %h2 Redirects and linking to directories
      %p When linking to directory indexes (such as href="typesofcats/" instead of href="typesofcats/index.html"), you must provide a trailing slash. This is because jQuery Mobile assumes the section after the last "/" character in a url is a filename, and it will remove that section when creating base urls from which future pages will be referenced.
      %p
        However, you can work around this issue by returning your page div with a
        %code data-url
        attribute already specified. When you do this, jQuery Mobile will use that attribute's value for updating the URL, instead of the url used to request that page. This also allows you to return urls that change as the result of a redirect, for example, you might post a form to "/login.html" but return a page from the url "/account" after a successful submission. This tool allows you to take control of the jQuery Mobile history stack in these situations. Here's an example:
      %p
        The following link points to "docs-links-urltest/index.html":
        %a{:href => "/mobile/docs/pages/links_urltest"} Test Link
        which is a directory with an index page. The return page will update the hash as "/docs/pages/docs-links-urltest/" with a trailing slash. This is done via the data-url attribute in that page's source. Keep in mind that the value will replace the entire hash, and it is up to you to replace it with a URL that actually resolves to the correct page when requested via refresh or deep link.
      %p
        Learn more about the technical details of the navigation model and
        %a{:href => "/mobile/docs/pages/navmodel"} Ajax, hashes and history
        in jQuery mobile.
      %h2 Link examples
      %p All standard HTML link types are supported in jQuery Mobile in addition to the types outlined above. Here is a sampler of many common link types:
      %ul{"data-divider-theme" => "d", "data-inset" => "true", "data-role" => "listview", "data-theme" => "d"}
        %li{"data-role" => "list-divider"} Links that will be Ajax-loaded with page transitions
        %li
          %a{:href => "/mobile"} Link in the same domain
        %li
          %a{"data-rel" => "dialog", :href => "../pages/dialog.html"} Dialog link: data-rel="dialog" (not tracked in history)
        %li{"data-role" => "list-divider"} Links that will refresh the page
        %li
          %a{:href => "http://www.jquery.com"} External domain
        %li
          %a{:href => "/mobile", :rel => "external"} Link with rel="external"
        %li
          %a{"data-ajax" => "false", :href => "index.html"} link with [data-ajax="false"]
        %li
          %a{:href => "/mobile", :target => "foo"} Link with target="foo"
        %li{"data-role" => "list-divider"} Email links
        %li
          %a{:href => "mailto:jdoe@foo.com"} Basic email: mailto:jdoe@foo.com
        %li
          %a{:href => "mailto:jdoe@foo.com?cc=bill@bar.com&bcc=mark@abc.com&subject=Happy%20Birthday&body=Best%20wishes!"} Mailto with a cc:, bcc:, subject and body pre-filled
        %li{"data-role" => "list-divider"} Phone links
        %li
          %a{:href => "tel:15555555555"} Phone: tel:15555555555
        %li{"data-role" => "list-divider"} Other
        %li
          %a{:href => "#"} A href="#" will return false
    / /content-primary
    .content-secondary
      .ui-body-b
        %div{"data-collapsed" => "true", "data-content-theme" => "d", "data-role" => "collapsible", "data-theme" => "b"}
          %h3 More in this section
          %ul{"data-dividertheme" => "d", "data-role" => "listview", "data-theme" => "c"}
            %li{"data-role" => "list-divider"} Pages &amp; Dialogs
            %li
              %a{:href => "/mobile/docs/pages/anatomy"} Anatomy of a page
            %li
              %a{"data-ajax" => "false", :href => "/mobile/docs/pages/template"} Single page template
            %li
              %a{"data-ajax" => "false", :href => "/mobile/docs/pages/multipage_template"} Multi-page template
            %li
              %a{:href => "/mobile/docs/pages/titles"} Page titles
            %li{"data-theme" => "a"}
              %a{:href => "/mobile/docs/pages/links"} Linking pages
            %li
              %a{"data-ajax" => "false", :href => "/mobile/docs/pages/transitions"} Page transitions
            %li
              %a{:href => "/mobile/docs/pages/dialogs"} Dialogs
            %li
              %a{:href => "/mobile/docs/pages/cache"} Prefetching &amp; caching pages
            %li
              %a{:href => "/mobile/docs/pages/navmodel"} Ajax, hashes &amp; history
            %li
              %a{:href => "/mobile/docs/pages/dynamics"} Dynamically injecting Pages
            %li
              %a{:href => "/mobile/docs/pages/scripting"} Scripting pages
            %li
              %a{:href => "/mobile/docs/pages/phonegap"} PhoneGap apps
            %li
              %a{:href => "/mobile/docs/pages/touchoverflow"} touchOverflow feature
            %li
              %a{:href => "/mobile/docs/pages/themes"} Theming pages
  / /content
  .footer-docs{"data-role" => "footer", "data-theme" => "c"}
    %p &copy; 2011 The jQuery Project
  / /page

-@title = "jQuery Mobile Docs - Pages"

- content_for :content_head do
  = render(:partial => "/mobile/index.js.haml", :format => :js)

%div{"data-role" => "page"}
  %div{"data-role" => "header", "data-theme" => "b"}
    %h1 Linking pages
    %a.ui-btn-right.jqm-home{"data-direction" => "reverse", "data-icon" => "home", "data-iconpos" => "notext", :href => "/mobile"} Home
  / /header
  %div{"data-role" => "content"}
    %p jQuery Mobile is designed to work with simple page linking conventions. Essentially, you can link pages and assets as you normally would, and jQuery Mobile will automatically handle page requests in a single-page model, using Ajax when possible. When Ajax isn't possible (such as a non-same-domain url, or if specified using certain attributes on the link), a normal http request is used instead.
    %p The goal of this model is to allow developers to create websites using best practices &mdash; where ordinary links will "just work" without any special configuration &mdash; while creating a rich, native-like experience that can't be achieved with standard HTTP requests.
    %h2 External page linking
    %p jQuery Mobile automates the process of building Ajax powered sites and applications.
    %p
      By default, when you click on link that points to an external page (ex. products.html), the framework will parse the link's
      %code href
      to formulate an Ajax request (Hijax) and displays the loading spinner.
    %p If the Ajax request is successful, the new page content is added to the DOM, all mobile widgets are auto-initialized, then the new page is animated into view with a page transition.
    %p
      If the Ajax request fails, the framework will display a small error message overlay (styled in the "e" swatch) that disappears after a brief time so this doesn't break the navigation flow. View an
      = succeed "." do
        %a{:href => "notapage.html"} example of the error message
    %h2 Local, internal linked "pages"
    %p
      A single HTML document can contain either a single 'page' or multiple 'pages' can be assembled and loaded together by stacking multiple divs with a
      %code data-role
      of
      = succeed "." do
        %code "page"
      This allows you to build a small site or application within a single HTML document; jQuery Mobile will simply display the first 'page' it finds in the source order when the page loads.
    %p
      If a link points to an anchor (
      %code> #foo
      ), the framework will looks for a page with that ID. If it finds a page in the HTML document, it will transition the new page into view.
    %p Here is an example of a 2 "page" site built with two jQuery Mobile divs navigated by linking to an ID placed on each page wrapper. Note that the IDs on the page wrappers are only needed to support the internal page linking, and are optional if each page is a separate HTML document.
    %pre
      %code
        :preserve
          &lt;div data-role=&quot;page&quot; id=&quot;foo&quot;&gt; 
            &lt;div data-role=&quot;content&quot;&gt;
              I'm the &quot;foo&quot; page. Since I'm the first page 
              in the source order, I will be displayed onLoad. 
              &lt;a href=&quot;#bar&quot;&gt;Visit the bar &quot;page&quot;&lt;/a&gt; 
            &lt;/div&gt;&lt;!-- /content --&gt;
          &lt;/div&gt;&lt;!-- /foo page --&gt; 
          
          &lt;div data-role=&quot;page&quot; id=&quot;bar&quot;&gt; 
            &lt;div data-role=&quot;content&quot;&gt;
              I'm the &quot;bar&quot; page. I will be shown only if the 
              anchor link on the &lt;a href=&quot;#foo&quot;&gt;foo&lt;/a&gt; 
              page is clicked. 
            &lt;/div&gt;&lt;!-- /content --&gt;
          &lt;/div&gt;&lt;!-- /bar page --&gt; 
          
    %p You can seamlessly navigate between local, internal "pages" and external pages in jQuery Mobile. Both will look the same to the end user except that external pages will display the Ajax spinner while loading. In either situation, jQuery Mobile updates the page's URL hash to enable Back button support, deep-linking and bookmarking.
    %p PLEASE NOTE: Since we are using the hash to track navigation history for all the Ajax 'pages', it's not currently possible to deep link to an anchor (index.html#foo) on a page in jQuery Mobile, because the framework will look for a 'page' with and ID of #foo instead of the native behavior of scrolling to the content with that ID.
    %p
      Learn more about the technical details of the
      %a{:href => "/mobile/docs/pages/docs-navmodel"} Ajax, hashes and history
      in jQuery mobile.
  / /content
/ /page

-@title = "jQuery Mobile Docs - Radio buttons"
= render :partial => "/mobile/index.js.haml", :format => :js

.type-interior{"data-role" => "page"}
  %div{"data-role" => "header", "data-theme" => "f"}
    %h1 Radio buttons
    %a.ui-btn-right.jqm-home{"data-direction" => "reverse", "data-icon" => "home", "data-iconpos" => "notext", :href => "/mobile"} Home
  / /header
  %div{"data-role" => "content"}
    .content-primary
      %form{:action => "#", :method => "get"}
        %h2 Radio buttons
        %ul.localnav{"data-role" => "controlgroup", "data-type" => "horizontal"}
          %li
            %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons"} Basics
          %li
            %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons/options"} Options
          %li
            %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons/methods"} Methods
          %li
            %a.ui-btn-active{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons/events"} Events
        %p Since the native  radio button is used as a proxy for the custom radio button, you can watch for events on the original, native radio button instead of needing to go through the radio button plugin. Bind to the change event by type: change, blur, focus, keypress, click, etc.
        %pre
          %code
            :preserve
              $("input[type='radio']").bind( "change", function(event, ui) {
                ...
              });
        %p The radio button plugin has the following custom events:
        %dl
          %dt
            %code create
            triggered when a radio button is created
          %dd
            %p This event is used to find out when a custom radio button was created. It is not used to create a custom radio button. The radio button create event can be used like this:
            %pre
              %code
                :preserve
                  $("input[type='radio']").checkboxradio({
                     create: function(event, ui) { ... }
                  });
    / /content-primary
    .content-secondary
      .ui-body-b
        %div{"data-collapsed" => "true", "data-role" => "collapsible", "data-theme" => "b"}
          %h3 More in this section
          %ul{"data-dividertheme" => "d", "data-role" => "listview", "data-theme" => "c"}
            %li{"data-role" => "list-divider"} Form elements
            %li
              %a{:href => "/mobile/docs/forms/docs_forms"} Form basics
            %li
              %a{:href => "/mobile/docs/forms/forms_all"} Form element gallery
            %li
              %a{:href => "/mobile/docs/forms/texts"} Text inputs
            %li
              %a{:href => "/mobile/docs/forms/forms_search"} Search inputs
            %li
              %a{:href => "/mobile/docs/forms/sliders"} Sliders
            %li
              %a{:href => "/mobile/docs/forms/forms_switch"} Flip toggle switch
            %li{"data-theme" => "a"}
              %a{:href => "/mobile/docs/forms/radiobuttons"} Radio buttons
            %li
              %a{:href => "/mobile/docs/forms/checkboxes"} Checkboxes
            %li
              %a{:href => "/mobile/docs/forms/selects"} Select menus
            %li
              %a{:href => "/mobile/docs/forms/forms_themes"} Theming forms
            %li
              %a{:href => "/mobile/docs/forms/forms_all_native"} Native form elements
            %li
              %a{:href => "/mobile/docs/forms/forms_sample"} Submitting forms
            %li
              %a{:href => "/mobile/docs/forms/plugin_eventsmethods"} Plugin methods
  / /content
  .footer-docs{"data-role" => "footer", "data-theme" => "c"}
    %p &copy; 2011 The jQuery Project
/ /page

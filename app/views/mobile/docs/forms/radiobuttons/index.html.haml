-@title = "jQuery Mobile Docs - Radio buttons"
= render :partial => "/mobile/index.js.haml", :format => :js

.type-interior{"data-role" => "page"}
  %div{"data-role" => "header", "data-theme" => "f"}
    %h1 Radio buttons
    %a.ui-btn-right.jqm-home{"data-direction" => "reverse", "data-icon" => "home", "data-iconpos" => "notext", :href => "/mobile"} Home
  / /header
  %div{"data-role" => "content"}
    .content-primary
      %form{:action => "#", :method => "get"}
        %h2 Radio buttons
        %ul.localnav{"data-role" => "controlgroup", "data-type" => "horizontal"}
          %li
            %a.ui-btn-active{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons"} Basics
          %li
            %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons/options"} Options
          %li
            %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons/methods"} Methods
          %li
            %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/radiobuttons/events"} Events
        %p
          Radio buttons are used to provide a list of options where only a single items can be selected. Traditional desktop radio buttons are not optimized for touch input so in jQuery Mobile, we style the
          %code label
          for the radio buttons so they are larger and look clickable. A custom set of icons are added to the label to provide additional visual feedback.
        %p Both the radio and checkbox controls below use standard input/label markup, but are styled to be more touch-friendly. The styled control you see is actually the label element, which sits over the real input, so if images fail to load, you'll still have a functional control. In most browsers, clicking the label automatically triggers a click on the input, but we've had to trigger the update manually for a few mobile browsers that don't do this natively. On the desktop, these controls are keyboard and screen-reader accessible.
        %h2 Vertically grouped radio buttons
        %p
          To create a set of radio buttons, add an
          %code input
          with a
          %code type="radio"
          attribute and a corresponding
          = succeed "." do
            %code label
          Set the
          %code for
          attribute of the
          %code label
          to match the ID of the
          %code input
          so they are semantically associated.
        %p
          Because radio buttons use the
          %code label
          element for the text displayed next to the checkbox form element, we recommend wrapping the radio buttons in a
          %code fieldset
          element that has a
          %code legend
          which acts as the title for the question.
        %p
          Lastly, need to wrap the
          %code fieldset
          in a
          %code div
          with
          %code data-role="controlgroup"
          attribute to the
          %code fieldset
          so it can be styled in a parallel way as text inputs, selects or other form elements.
        %pre
          %code
            :preserve
              &lt;div data-role=&quot;fieldcontain&quot;&gt;
                  &lt;fieldset data-role=&quot;controlgroup&quot;&gt;
                    &lt;legend&gt;Choose a pet:&lt;/legend&gt;
                        &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-1&quot; value=&quot;choice-1&quot; checked=&quot;checked&quot; /&gt;
                        &lt;label for=&quot;radio-choice-1&quot;&gt;Cat&lt;/label&gt;

                        &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-2&quot; value=&quot;choice-2&quot;  /&gt;
                        &lt;label for=&quot;radio-choice-2&quot;&gt;Dog&lt;/label&gt;

                        &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-3&quot; value=&quot;choice-3&quot;  /&gt;
                        &lt;label for=&quot;radio-choice-3&quot;&gt;Hamster&lt;/label&gt;

                        &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-4&quot; value=&quot;choice-4&quot;  /&gt;
                        &lt;label for=&quot;radio-choice-4&quot;&gt;Lizard&lt;/label&gt;
                  &lt;/fieldset&gt;
              &lt;/div&gt;
        %p
          To visually integrate multiple radio buttons into a vertically grouped button set, the framework will automatically remove all margins between buttons and round only the top and bottom corners of the set if there is a
          %code data-role="controlgroup"
          attribute on the fie.
        %div{"data-role" => "fieldcontain"}
          %fieldset{"data-role" => "controlgroup"}
            %legend Choose a pet:
            %input#radio-pet-1{:checked => "checked", :name => "radio-pet-1", :type => "radio", :value => "choice-1"}/
            %label{:for => "radio-pet-1"} Cat
            %input#radio-pet-2{:name => "radio-pet-1", :type => "radio", :value => "choice-2"}/
            %label{:for => "radio-pet-2"} Dog
            %input#radio-pet-3{:name => "radio-pet-1", :type => "radio", :value => "choice-3"}/
            %label{:for => "radio-pet-3"} Hamster
            %input#radio-pet-4{:name => "radio-pet-1", :type => "radio", :value => "choice-4"}/
            %label{:for => "radio-pet-4"} Lizard
        %h2 Horizontal radio button sets
        %p
          Radio buttons can also be used for grouped button sets only a single button can be selected at once, such as a view switcher control. To make a horizontal radio button set, add the
          %code data-type="horizontal"
          to the
          = succeed "." do
            %code fieldset
        %code
          \&lt;fieldset data-role=&quot;controlgroup&quot;
          %strong data-type=&quot;horizontal&quot;
          \&gt;
        %div{"data-role" => "fieldcontain"}
          %fieldset{"data-role" => "controlgroup", "data-type" => "horizontal"}
            %legend Layout view:
            %input#radio-view-a{:name => "radio-view", :type => "radio", :value => "list"}/
            %label{:for => "radio-view-a"} List
            %input#radio-view-b{:name => "radio-view", :type => "radio", :value => "grid"}/
            %label{:for => "radio-view-b"} Grid
            %input#radio-view-c{:name => "radio-view", :type => "radio", :value => "gallery"}/
            %label{:for => "radio-view-c"} Gallery
        %p The framework will float the labels so they sit side-by-side on a line, hide the radio button icons and only round the left and right edges of the group.
        %h2 Refreshing a radio button
        %p If you manipulate a radio button via JavaScript, you must call the refresh method on it to update the visual styling. Here is an example:
        %code
          $("input[type='radio']").attr("checked",true).checkboxradio("refresh");
    / /content-primary
    .content-secondary
      .ui-body-b
        %div{"data-collapsed" => "true", "data-role" => "collapsible", "data-theme" => "b"}
          %h3 More in this section
          %ul{"data-dividertheme" => "d", "data-role" => "listview", "data-theme" => "c"}
            %li{"data-role" => "list-divider"} Form elements
            %li
              %a{:href => "/mobile/docs/forms/docs_forms"} Form basics
            %li
              %a{:href => "/mobile/docs/forms/forms_all"} Form element gallery
            %li
              %a{:href => "/mobile/docs/forms/textinputs"} Text inputs
            %li
              %a{:href => "/mobile/docs/forms/forms_search"} Search inputs
            %li
              %a{:href => "/mobile/docs/forms/sliders"} Sliders
            %li
              %a{:href => "/mobile/docs/forms/forms_switch"} Flip toggle switch
            %li{"data-theme" => "a"}
              %a{:href => "/mobile/docs/forms/radiobuttons"} Radio buttons
            %li
              %a{:href => "/mobile/docs/forms/checkboxes"} Checkboxes
            %li
              %a{:href => "/mobile/docs/forms/selects"} Select menus
            %li
              %a{:href => "/mobile/docs/forms/forms_themes"} Theming forms
            %li
              %a{:href => "/mobile/docs/forms/forms_all_native"} Native form elements
            %li
              %a{:href => "/mobile/docs/forms/forms_sample"} Submitting forms
            %li
              %a{:href => "/mobile/docs/forms/plugin_eventsmethods"} Plugin methods
  / /content
  .footer-docs{"data-role" => "footer", "data-theme" => "c"}
    %p &copy; 2011 The jQuery Project
/ /page

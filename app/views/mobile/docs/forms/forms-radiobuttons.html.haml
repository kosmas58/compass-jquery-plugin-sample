-@title = "jQuery Mobile Docs - Forms"

- content_for :content_head do
  = render(:partial => "/mobile/index.js.haml", :format => :js)

%div{"data-role" => "page"}
  %div{"data-role" => "header", "data-theme" => "b"}
    %h1 Radio buttons
    %a.ui-btn-right.jqm-home{"data-direction" => "reverse", "data-icon" => "home", "data-iconpos" => "notext", :href => "/mobile"} Home
  / /header
  %div{"data-role" => "content"}
    %form{:action => "#", :method => "get"}
      %h2 Radio buttons
      %p
        Radio buttons are used to provide a list of options where only a single items can be selected. Traditional desktop radio buttons are not optimized for touch input so in jQuery Mobile, we style the
        %code label
        for the radio buttons so they are larger and look clickable. A custom set of icons are added to the label to provide additional visual feedback.
      %p Both the radio and checkbox controls below use standard input/label markup, but are styled to be more touch-friendly. The styled control you see is actually the label element, which sits over the real input, so if images fail to load, you'll still have a functional control. In most browsers, clicking the label automatically triggers a click on the input, but we've had to trigger the update manually for a few mobile browsers that don't do this natively. On the desktop, these controls are keyboard and screen-reader accessible.
      %h2 Vertically grouped radio buttons
      %p
        To create a set of radio buttons, add an
        %code input
        with a
        %code type="radio"
        attribute and a corresponding
        = succeed "." do
          %code label
        Set the
        %code for
        attribute of the
        %code label
        to match the ID of the
        %code input
        so they are semantically associated.
      %p
        Because radio buttons use the
        %code label
        element for the text displayed next to the checkbox form element, we recommend wrapping the radio buttons in a
        %code fieldset
        element that has a
        %code legend
        which acts as the title for the question.
      %p
        Lastly, need to wrap the
        %code fieldset
        in a
        %code div
        with
        %code data-role="controlgroup"
        attribute to the
        %code fieldset
        so it can be styled in a parallel way as text inputs, selects or other form elements.
      %pre
        %code
          :preserve
            &lt;div data-role=&quot;fieldcontain&quot;&gt;
              &lt;fieldset data-role=&quot;controlgroup&quot;&gt;
                &lt;legend&gt;Choose a pet:&lt;/legend&gt;
                  &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-1&quot; value=&quot;choice-1&quot; checked=&quot;checked&quot; /&gt;
                  &lt;label for=&quot;radio-choice-1&quot;&gt;Cat&lt;/label&gt;
      
                  &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-2&quot; value=&quot;choice-2&quot;  /&gt;
                  &lt;label for=&quot;radio-choice-2&quot;&gt;Dog&lt;/label&gt;
      
                  &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-3&quot; value=&quot;choice-3&quot;  /&gt;
                  &lt;label for=&quot;radio-choice-3&quot;&gt;Hampster&lt;/label&gt;
      
                  &lt;input type=&quot;radio&quot; name=&quot;radio-choice-1&quot; id=&quot;radio-choice-4&quot; value=&quot;choice-4&quot;  /&gt;
                  &lt;label for=&quot;radio-choice-4&quot;&gt;Lizard&lt;/label&gt;
                &lt;/fieldset&gt;
            &lt;/div&gt;
      %p
        To visually integrate multiple radio buttons into a vertically grouped button set, the framework will automatically remove all margins between buttons and round only the top and bottom corners of the set if there is a
        %code data-role="controlgroup"
        attribute on the fie.
      %div{"data-role" => "fieldcontain"}
        %fieldset{"data-role" => "controlgroup"}
          %legend Choose a pet:
          %input#radio-pet-1{:checked => "checked", :name => "radio-pet-1", :type => "radio", :value => "choice-1"}/
          %label{:for => "radio-pet-1"} Cat
          %input#radio-pet-2{:name => "radio-pet-1", :type => "radio", :value => "choice-2"}/
          %label{:for => "radio-pet-2"} Dog
          %input#radio-pet-3{:name => "radio-pet-1", :type => "radio", :value => "choice-3"}/
          %label{:for => "radio-pet-3"} Hampster
          %input#radio-pet-4{:name => "radio-pet-1", :type => "radio", :value => "choice-4"}/
          %label{:for => "radio-pet-4"} Lizard
      %h2 Horizontal radio button sets
      %p
        Radio buttons can also be used for grouped button sets only a single button can be selected at once, such as a view switcher control. To make a horizontal radio button set, add the
        %code data-type="horizontal"
        to the
        = succeed "." do
          %code fieldset
      %pre
        %code
          :preserve
            &lt;div data-role=&quot;fieldcontain&quot;&gt;
              &lt;fieldset data-role=&quot;controlgroup&quot; data-type=&quot;horizontal&quot; &gt;
            &lt;/div&gt;
      %p The framework will float the labels so they sit side-by-side on a line, hide the radio button icons and only round the left and right edges of the group.
      %div{"data-role" => "fieldcontain"}
        %fieldset{"data-role" => "controlgroup", "data-type" => "horizontal"}
          %legend Layout view:
          %input#radio-view-a{:name => "radio-view", :type => "radio", :value => "list"}/
          %label{:for => "radio-view-a"} List
          %input#radio-view-b{:name => "radio-view", :type => "radio", :value => "grid"}/
          %label{:for => "radio-view-b"} Grid
          %input#radio-view-c{:name => "radio-view", :type => "radio", :value => "gallery"}/
          %label{:for => "radio-view-c"} Gallery
      /
        <h2>No icon option</h2>
        
        <p>If you don't want the default radiobutton icon to be added, add the <code></code> attribute to each radio <code>input</code>. </p>
        
        <div data-role="fieldcontain">
        <fieldset data-role="controlgroup">
        <legend>These don't have the radio state icons:</legend>
        <input type="radio" name="radio-noicon" id="radio-noicon1" value="a"  checked="checked" />
        <label for="radio-noicon1">Yes</label>
        <input type="radio" name="radio-noicon" id="radio-noicon2" value="b"  />
        <label for="radio-noicon2">No</label>
        <input type="radio" name="radio-noicon" id="radio-noicon3" value="c"  />
        <label for="radio-noicon3">Maybe</label>
        </fieldset>
        </div>
  / /content
/ /page

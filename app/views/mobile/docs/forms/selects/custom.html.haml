-@title = "jQuery Mobile Docs - Select"
= render :partial => "/mobile/index.js.haml", :format => :js

.type-interior{"data-role" => "page"}
  %div{"data-role" => "header", "data-theme" => "f"}
    %h1 Select Menus
    %a.ui-btn-right.jqm-home{"data-direction" => "reverse", "data-icon" => "home", "data-iconpos" => "notext", :href => "/mobile"} Home
  / /header
  %div{"data-role" => "content"}
    .content-primary
      %h2 Select menus
      %ul.localnav{"data-role" => "controlgroup", "data-type" => "horizontal"}
        %li
          %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/selects"} Basics
        %li
          %a.ui-btn-active{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/selects/custom"} Custom
        %li
          %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/selects/options"} Options
        %li
          %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/selects/methods"} Methods
        %li
          %a{"data-role" => "button", "data-transition" => "fade", :href => "/mobile/docs/forms/selects/events"} Events
      %h2 Custom select menus
      %p
        The framework is capable of building a custom menu based on the
        %code select
        element's list of options.  We recommend using a custom menu when multiple selections are required, or when the menu itself must be styled with CSS.
      %p
        You can optionally use custom-styled select menus instead of the native OS menu. The custom menu supports disabled options and multiple selection (whereas native mobile OS support for both is inconsistent), adds an elegant way to handle placeholder values, and restores missing functionality on certain platforms such as
        %code optgroup
        support on Android (all explained below).  In addition, the framework applies the custom button's theme to the menu to better match the look and feel and provide visual consistency across platforms. Lastly, custom menus often look better on desktop browsers because native desktop menus are smaller than their mobile counterparts and tend to look disproportionate.
      %p Keep in mind that there is overhead involved in parsing the native select to build a custom menu. If there are a lot of selects on a page, or a select has a long list of options, this can impact the performance of the page, so we recommend using custom menus sparingly.
      %p
        To use custom menus on a specific
        = succeed "," do
          %code select
        just add the
        %code data-native-menu="false"
        attribute. Alternately, this can also programmatically set the select menu's
        %code nativeMenu
        configuration option to
        %code false
        in a callback bound to the
        %code mobileinit
        event to achieve the same effect. This will globally make all selects use the custom menu by default. The following must be included in the page after jQuery is loaded but before jQuery Mobile is loaded.
      %code
        %pre
          :preserve
            $(document).bind('mobileinit',function(){
               $.mobile.selectmenu.prototype.options.nativeMenu = false;
            });
      %p
        When the
        %code select
        has a small number of options that will fit on the device's screen, the menu will appear as a small overlay with a pop transition:
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-custom"} Shipping method:
        %select#select-choice-custom{"data-native-menu" => "false", :name => "select-choice-1"}
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %p
        When it has too many options to show on the device's screen, the framework will automatically create a new &quot;page&quot; populated with a standard
        %a{:href => "/mobile/docs/docs_lists"} list view
        for the options. This allows us to use the native scrolling included on the device for moving through a long list. The text inside the
        %code label
        is used as the title for this page.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-3"} Your state:
        %select#select-choice-3{"data-native-menu" => "false", :name => "select-choice-3"}
          %option{:value => "AL"} Alabama
          %option{:value => "AK"} Alaska
          %option{:value => "AZ"} Arizona
          %option{:value => "AR"} Arkansas
          %option{:value => "CA"} California
          %option{:value => "CO"} Colorado
          %option{:value => "CT"} Connecticut
          %option{:value => "DE"} Delaware
          %option{:value => "FL"} Florida
          %option{:value => "GA"} Georgia
          %option{:value => "HI"} Hawaii
          %option{:value => "ID"} Idaho
          %option{:value => "IL"} Illinois
          %option{:value => "IN"} Indiana
          %option{:value => "IA"} Iowa
          %option{:value => "KS"} Kansas
          %option{:value => "KY"} Kentucky
          %option{:value => "LA"} Louisiana
          %option{:value => "ME"} Maine
          %option{:value => "MD"} Maryland
          %option{:value => "MA"} Massachusetts
          %option{:value => "MI"} Michigan
          %option{:value => "MN"} Minnesota
          %option{:value => "MS"} Mississippi
          %option{:value => "MO"} Missouri
          %option{:value => "MT"} Montana
          %option{:value => "NE"} Nebraska
          %option{:value => "NV"} Nevada
          %option{:value => "NH"} New Hampshire
          %option{:value => "NJ"} New Jersey
          %option{:value => "NM"} New Mexico
          %option{:value => "NY"} New York
          %option{:value => "NC"} North Carolina
          %option{:value => "ND"} North Dakota
          %option{:value => "OH"} Ohio
          %option{:value => "OK"} Oklahoma
          %option{:value => "OR"} Oregon
          %option{:value => "PA"} Pennsylvania
          %option{:value => "RI"} Rhode Island
          %option{:value => "SC"} South Carolina
          %option{:value => "SD"} South Dakota
          %option{:value => "TN"} Tennessee
          %option{:value => "TX"} Texas
          %option{:value => "UT"} Utah
          %option{:value => "VT"} Vermont
          %option{:value => "VA"} Virginia
          %option{:value => "WA"} Washington
          %option{:value => "WV"} West Virginia
          %option{:value => "WI"} Wisconsin
          %option{:value => "WY"} Wyoming
      %h3 Disabled options
      %p
        jQuery Mobile will automatically disable and style option tags with the
        %code disabled
        attribute.  In the demo below, the second option &quot;Rush: 3 days&quot; has been set to disabled.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-7"} Shipping method:
        %select#select-choice-7{:name => "select-choice-7"}
          %option{:value => "standard"} Standard: 7 day
          %option{:disabled => "disabled", :value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %h3 Placeholder options
      %p It's common for developers to include a &quot;null&quot; option in their select element to force a user to choose an option. If a placeholder option is present in your markup, jQuery Mobile will hide them in the overlay menu, showing only valid choices to the user, and display the placeholder text inside the menu as a header.  A placeholder option is added when the framework finds:
      %ul
        %li An option with no value attribute (or an empty value attribute)
        %li An option with no text node
        %li
          An option with a
          %code data-placeholder="true"
          attribute. (This allows you to use an option that has a value and a textnode as a placeholder option).
      %p
        You can disable this feature through the selectmenu plugin's
        %code hidePlaceholderMenuItems
        option, like this:
      %pre
        %code
          :preserve

            $.mobile.selectmenu.prototype.options.hidePlaceholderMenuItems = false;
                        %p Examples of various placeholder options:
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-4"} Shipping method:
        %select#select-choice-4{"data-native-menu" => "false", :name => "select-choice-4"}
          %option
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-5"} Shipping method:
        %select#select-choice-5{"data-native-menu" => "false", :name => "select-choice-5"}
          %option Choose one...
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-6"} Shipping method:
        %select#select-choice-6{"data-native-menu" => "false", :name => "select-choice-6"}
          %option{"data-placeholder" => "true", :value => "choose-one"} Choose one...
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %h3 Multiple selects
      %p
        If the
        %code multiple
        attribute is present in your markup, jQuery Mobile will enhance the element with a few extra considerations:
      %ul
        %li A header element will be created inside the menu and display the placeholder text and a close button.
        %li Clicking on an item inside the overlay menu will not close the widget.
        %li A ghosted, unchecked icon will appear adjacent to each unselected item.  When the item is selected the icon will change to a checkbox.  Neither icon will appear inside a single select box.
        %li Once 2+ items are selected, a counter element with the total number of selected items will appear inside the button.
        %li The text of each selected item will appear inside the button as a list.  If the button is not wide enough to display the entire list, it is truncated with an ellipses.
        %li If no items are selected, the button's text will default to the placeholder text.
        %li If no placeholder element exists, the default button text will be blank and the header will appear with just a close button. Because this isn't a friendly user experience, we recommended that you always specify a placeholder element when using multiple select boxes.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-9"} Shipping method(s):
        %select#select-choice-9{"data-native-menu" => "false", :multiple => "multiple", :name => "select-choice-9"}
          %option Choose options
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %p
        When a select is large enough to where the menu will open in a new page, the placeholder text is displayed in the button when no items are selected, and the
        %code label
        text is displayed in the menu's header.  This differs from smaller overlay menus where the placeholder text is displayed in both the button and the header, and from full-page single selects where the placeholder text is not used at all.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-10"} Choose state(s):
        %select#select-choice-10{"data-native-menu" => "false", :multiple => "multiple", :name => "select-choice-10"}
          %option Choose options
          %option{:value => "AL"} Alabama
          %option{:value => "AK"} Alaska
          %option{:value => "AZ"} Arizona
          %option{:value => "AR"} Arkansas
          %option{:value => "CA"} California
          %option{:value => "CO"} Colorado
          %option{:value => "CT"} Connecticut
          %option{:value => "DE"} Delaware
          %option{:value => "FL"} Florida
          %option{:value => "GA"} Georgia
          %option{:value => "HI"} Hawaii
          %option{:value => "ID"} Idaho
          %option{:value => "IL"} Illinois
          %option{:value => "IN"} Indiana
          %option{:value => "IA"} Iowa
          %option{:value => "KS"} Kansas
          %option{:value => "KY"} Kentucky
          %option{:value => "LA"} Louisiana
          %option{:value => "ME"} Maine
          %option{:value => "MD"} Maryland
          %option{:value => "MA"} Massachusetts
          %option{:value => "MI"} Michigan
          %option{:value => "MN"} Minnesota
          %option{:value => "MS"} Mississippi
          %option{:value => "MO"} Missouri
          %option{:value => "MT"} Montana
          %option{:value => "NE"} Nebraska
          %option{:value => "NV"} Nevada
          %option{:value => "NH"} New Hampshire
          %option{:value => "NJ"} New Jersey
          %option{:value => "NM"} New Mexico
          %option{:value => "NY"} New York
          %option{:value => "NC"} North Carolina
          %option{:value => "ND"} North Dakota
          %option{:value => "OH"} Ohio
          %option{:value => "OK"} Oklahoma
          %option{:value => "OR"} Oregon
          %option{:value => "PA"} Pennsylvania
          %option{:value => "RI"} Rhode Island
          %option{:value => "SC"} South Carolina
          %option{:value => "SD"} South Dakota
          %option{:value => "TN"} Tennessee
          %option{:value => "TX"} Texas
          %option{:value => "UT"} Utah
          %option{:value => "VT"} Vermont
          %option{:value => "VA"} Virginia
          %option{:value => "WA"} Washington
          %option{:value => "WV"} West Virginia
          %option{:value => "WI"} Wisconsin
          %option{:value => "WY"} Wyoming
      %h3 Optgroup support
      %p
        If a select menu contains
        %code optgroup
        elements, jQuery Mobile will create a divider &amp; group items based on the
        %code label
        attribute's text:
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-8"} Shipping method:
        %select#select-choice-8{"data-native-menu" => "false", :name => "select-choice-8"}
          %optgroup{:label => "USPS"}
            %option{:value => "standard"} Standard: 7 day
            %option{:value => "rush"} Rush: 3 days
            %option{:value => "express"} Express: next day
            %option{:value => "overnight"} Overnight
          %optgroup{:label => "FedEx"}
            %option{:value => "firstOvernight"} First Overnight
            %option{:value => "expressSaver"} Express Saver
            %option{:value => "ground"} Ground
    / /content-primary
    .content-secondary
      .ui-body-b
        %div{"data-collapsed" => "true", "data-content-theme" => "d", "data-role" => "collapsible", "data-theme" => "b"}
          %h3 More in this section
          %ul{"data-dividertheme" => "d", "data-role" => "listview", "data-theme" => "c"}
            %li{"data-role" => "list-divider"} Form elements
            %li
              %a{:href => "/mobile/docs/forms/docs_forms"} Form basics
            %li
              %a{:href => "/mobile/docs/forms/all"} Form element gallery
            %li
              %a{:href => "/mobile/docs/forms/textinputs"} Text inputs
            %li
              %a{:href => "/mobile/docs/forms/search"} Search input
            %li
              %a{:href => "/mobile/docs/forms/slider"} Slider
            %li
              %a{:href => "/mobile/docs/forms/switch"} Flip toggle switch
            %li
              %a{:href => "/mobile/docs/forms/radiobuttons"} Radio buttons
            %li
              %a{:href => "/mobile/docs/forms/checkboxes"} Checkboxes
            %li{"data-theme" => "a"}
              %a{:href => "/mobile/docs/forms/selects"} Select menus
            %li
              %a{:href => "/mobile/docs/forms/themes"} Theming forms
            %li
              %a{:href => "/mobile/docs/forms/all_native"} Native form elements
            %li
              %a{:href => "/mobile/docs/forms/sample"} Submitting forms
  / /content
  .footer-docs{"data-role" => "footer", "data-theme" => "c"}
    %p &copy; 2011 The jQuery Project
/ /page

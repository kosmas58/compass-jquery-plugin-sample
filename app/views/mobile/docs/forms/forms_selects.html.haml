-@title = "jQuery Mobile Docs - Select"

= render :partial => "/mobile/index.js.haml", :format => :js

%div{"data-role" => "page"}
  %div{"data-role" => "header", "data-theme" => "b"}
    %h1 Select Menus
    %a.ui-btn-right.jqm-home{"data-direction" => "reverse", "data-icon" => "home", "data-iconpos" => "notext", :href => "../../"} Home
  / /header
  %div{"data-role" => "content"}
    %form{:action => "#", :method => "get"}
      %h2 Select menus
      %p
        The select menus are driven off native
        %code select
        elements, but the native selects are hidden from view and replaced with a custom-styled select button that matches the look and feel of the jQuery Mobile framework. The replacement selects are ARIA-enabled and are keyboard accessible on the desktop as well.
      %p When the select button is clicked, the native select menu picker for the OS will open. When a value is selected in the menu, the custom select button is updated to match the new selection.
      %p
        To add a select widget to your page, start with a standard
        %code select
        element populated with a set of
        %code option
        elements. Set the
        %code for
        attribute of the
        %code label
        to match the ID of the
        %code select
        so they are semantically associated. Wrap them in a
        %code div
        with the
        %code data-role="fieldcontain"
        attribute to help visually group it in a longer form.
      %p
        The framework will find all
        %code select
        elements and automatically enhance them into the custom select menus. Here is a typical select menu:
      %pre
        %code
          :preserve
            &lt;div data-role=&quot;fieldcontain&quot;&gt;
              &lt;label for=&quot;select-choice-1&quot; class=&quot;select&quot;&gt;Choose shipping method:&lt;/label&gt;
              &lt;select name=&quot;select-choice-1&quot; id=&quot;select-choice-1&quot;&gt;
                &lt;option value=&quot;standard&quot;&gt;Standard: 7 day&lt;/option&gt;
                &lt;option value=&quot;rush&quot;&gt;Rush: 3 days&lt;/option&gt;
                &lt;option value=&quot;express&quot;&gt;Express: next day&lt;/option&gt;
                &lt;option value=&quot;overnight&quot;&gt;Overnight&lt;/option&gt;
              &lt;/select&gt;
            &lt;/div&gt;
      %p This produces this select:
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-1"} Choose shipping method:
        %select#select-choice-1{"data-native-menu" => "false", :name => "select-choice-1"}
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %p Here is an example of a select with a long list of options:
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-3"} Your state:
        %select#select-choice-3{"data-native-menu" => "false", :name => "select-choice-3"}
          %option{:value => "AL"} Alabama
          %option{:value => "AK"} Alaska
          %option{:value => "AZ"} Arizona
          %option{:value => "AR"} Arkansas
          %option{:value => "CA"} California
          %option{:value => "CO"} Colorado
          %option{:value => "CT"} Connecticut
          %option{:value => "DE"} Delaware
          %option{:value => "FL"} Florida
          %option{:value => "GA"} Georgia
          %option{:value => "HI"} Hawaii
          %option{:value => "ID"} Idaho
          %option{:value => "IL"} Illinois
          %option{:value => "IN"} Indiana
          %option{:value => "IA"} Iowa
          %option{:value => "KS"} Kansas
          %option{:value => "KY"} Kentucky
          %option{:value => "LA"} Louisiana
          %option{:value => "ME"} Maine
          %option{:value => "MD"} Maryland
          %option{:value => "MA"} Massachusetts
          %option{:value => "MI"} Michigan
          %option{:value => "MN"} Minnesota
          %option{:value => "MS"} Mississippi
          %option{:value => "MO"} Missouri
          %option{:value => "MT"} Montana
          %option{:value => "NE"} Nebraska
          %option{:value => "NV"} Nevada
          %option{:value => "NH"} New Hampshire
          %option{:value => "NJ"} New Jersey
          %option{:value => "NM"} New Mexico
          %option{:value => "NY"} New York
          %option{:value => "NC"} North Carolina
          %option{:value => "ND"} North Dakota
          %option{:value => "OH"} Ohio
          %option{:value => "OK"} Oklahoma
          %option{:value => "OR"} Oregon
          %option{:value => "PA"} Pennsylvania
          %option{:value => "RI"} Rhode Island
          %option{:value => "SC"} South Carolina
          %option{:value => "SD"} South Dakota
          %option{:value => "TN"} Tennessee
          %option{:value => "TX"} Texas
          %option{:value => "UT"} Utah
          %option{:value => "VT"} Vermont
          %option{:value => "VA"} Virginia
          %option{:value => "WA"} Washington
          %option{:value => "WV"} West Virginia
          %option{:value => "WI"} Wisconsin
          %option{:value => "WY"} Wyoming
      %p This example organizes the options with optgroup elements and has a disabled option.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-nc"} Preferred delivery:
        %select#select-choice-nc{"data-native-menu" => "false", :name => "select-choice-8"}
          %optgroup{:label => "FedEx"}
            %option{:value => "firstOvernight"} First Overnight
            %option{:value => "expressSaver"} Express Saver
            %option{:value => "ground"} Ground
          %optgroup{:label => "UPS"}
            %option{:value => "firstOvernight"} First Overnight
            %option{:value => "expressSaver"} Express Saver
            %option{:value => "ground"} Ground
          %optgroup{:label => "US Mail"}
            %option{:value => "standard"} Standard: 7 day
            %option{:value => "rush"} Rush: 3 days
            %option{:disabled => "disabled", :value => "express"} Express: next day (disabled)
            %option{:value => "overnight"} Overnight
      %p
        Note that the native menus don't support multiple selection via the
        %code multiple="multiple"
        attribute. If this feature is needed, we recommend using custom menus.
      %h2 Option to use custom menus
      %p
        You can optionally use custom-styled select menus instead of the native versions. This adds the ability to theme the menu to better match the look and feel of your site and provides visual consistency across platforms. In addition, it supports multiple selection, restores missing functionality on certain platforms such as
        %code optgroup
        support on Android,  and adds an elegant way to handle placeholder values (explained below). Lastly, the custom menus will look better on desktop browsers because native menus on the desktop tend to be fairly small compared their mobile counterparts and this can look a bit odd if desktop if a priority for your project.
      %p Keep in mind that there is overhead involved in parsing the native select to build a custom menu. If there are a lot of selects on a page, or a select has a long list of options, this can impact the performance of the page so we recommend using custom menus sparingly.
      %p
        To use custom menus on a specific
        = succeed "," do
          %code select
        just add the
        %code data-native-menu="false"
        attribute. Alternately, this can also programmatically set the select menu's
        %code nativeMenu
        configuration option to
        %code false
        in a callback bound to the
        %code mobileinit
        event to achieve the same effect. This will globally make all selects use the custom menu by default. The following must be included in the page after jQuery is loaded but before jQuery Mobile is loaded.
      %code
        %pre
          :preserve
            $(document).bind('mobileinit',function(){
              $.mobile.selectmenu.prototype.options.nativeMenu = false;
            });
      %p If there is a small number of options that will fit on the device's screen, it will appear as a small overlay with a pop transition.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-custom"} Choose shipping method:
        %select#select-choice-custom{"data-native-menu" => "false", :name => "select-choice-1"}
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %p
        If there is a select menu with too many options to show on the device's screen, the framework will automatically create a new &quot;page&quot; populated with a standard list view that contains all the options. This allows us to use the native scrolling included on the device for moving through a long list. The text inside the
        %code label
        is used as the title for this page.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-3"} Your state:
        %select#select-choice-3{"data-native-menu" => "false", :name => "select-choice-3"}
          %option{:value => "AL"} Alabama
          %option{:value => "AK"} Alaska
          %option{:value => "AZ"} Arizona
          %option{:value => "AR"} Arkansas
          %option{:value => "CA"} California
          %option{:value => "CO"} Colorado
          %option{:value => "CT"} Connecticut
          %option{:value => "DE"} Delaware
          %option{:value => "FL"} Florida
          %option{:value => "GA"} Georgia
          %option{:value => "HI"} Hawaii
          %option{:value => "ID"} Idaho
          %option{:value => "IL"} Illinois
          %option{:value => "IN"} Indiana
          %option{:value => "IA"} Iowa
          %option{:value => "KS"} Kansas
          %option{:value => "KY"} Kentucky
          %option{:value => "LA"} Louisiana
          %option{:value => "ME"} Maine
          %option{:value => "MD"} Maryland
          %option{:value => "MA"} Massachusetts
          %option{:value => "MI"} Michigan
          %option{:value => "MN"} Minnesota
          %option{:value => "MS"} Mississippi
          %option{:value => "MO"} Missouri
          %option{:value => "MT"} Montana
          %option{:value => "NE"} Nebraska
          %option{:value => "NV"} Nevada
          %option{:value => "NH"} New Hampshire
          %option{:value => "NJ"} New Jersey
          %option{:value => "NM"} New Mexico
          %option{:value => "NY"} New York
          %option{:value => "NC"} North Carolina
          %option{:value => "ND"} North Dakota
          %option{:value => "OH"} Ohio
          %option{:value => "OK"} Oklahoma
          %option{:value => "OR"} Oregon
          %option{:value => "PA"} Pennsylvania
          %option{:value => "RI"} Rhode Island
          %option{:value => "SC"} South Carolina
          %option{:value => "SD"} South Dakota
          %option{:value => "TN"} Tennessee
          %option{:value => "TX"} Texas
          %option{:value => "UT"} Utah
          %option{:value => "VT"} Vermont
          %option{:value => "VA"} Virginia
          %option{:value => "WA"} Washington
          %option{:value => "WV"} West Virginia
          %option{:value => "WI"} Wisconsin
          %option{:value => "WY"} Wyoming
      %h2 Placeholder options
      %p It's common for developers to include a &quot;null&quot; option in their select element to force a user to choose an option. If a placeholder option is present in your markup, jQuery Mobile will hide them in the overlay menu, showing only valid choices to the user, and display the placeholder text inside the menu as a header.  A placeholder option is added when the framework finds:
      %ul
        %li An option with no value attribute (or an empty value attribute)
        %li An option with no text node
        %li
          An option with a
          %code data-placeholder="true"
          attribute. (This allows you to use an option that has a value and a textnode as a placeholder option).
      %p
        You can disable this feature through the selectmenu plugin's
        %code hidePlaceholderMenuItems
        option, like this:
      %pre
        %code
          :preserve
            $.mobile.selectmenu.prototype.options.hidePlaceholderMenuItems = false;
      %p Here's a demo of various placeholder options:
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-4"} Choose shipping method:
        %select#select-choice-4{"data-native-menu" => "false", :name => "select-choice-4"}
          %option
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-5"} Choose shipping method:
        %select#select-choice-5{"data-native-menu" => "false", :name => "select-choice-5"}
          %option Choose one...
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-6"} Choose shipping method:
        %select#select-choice-6{"data-native-menu" => "false", :name => "select-choice-6"}
          %option{"data-placeholder" => "true", :value => "choose-one"} Choose one...
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %h2 Disabled options
      %p
        jQuery Mobile will automatically disable and style option tags with the
        %code disabled
        attribute.  In the demo below, the second option &quot;Rush: 3 days&quot; has been set to disabled.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-7"} Choose shipping method:
        %select#select-choice-7{"data-native-menu" => "false", :name => "select-choice-7"}
          %option{:value => "standard"} Standard: 7 day
          %option{:disabled => "disabled", :value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %h2 Optgroup support
      %p
        If a select menu contains
        %code optgroup
        elements, jQuery Mobile will create a divider &amp; group items based on the
        %code label
        attribute's text:
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-8"} Choose shipping method:
        %select#select-choice-8{"data-native-menu" => "false", :name => "select-choice-8"}
          %optgroup{:label => "USPS"}
            %option{:value => "standard"} Standard: 7 day
            %option{:value => "rush"} Rush: 3 days
            %option{:value => "express"} Express: next day
            %option{:value => "overnight"} Overnight
          %optgroup{:label => "FedEx"}
            %option{:value => "firstOvernight"} First Overnight
            %option{:value => "expressSaver"} Express Saver
            %option{:value => "ground"} Ground
      %h2 Multiple selects
      %p
        If the
        %code multiple
        attribute is present in your markup, jQuery Mobile will enhance the element with a few extra considerations:
      %ul
        %li A header element will be created inside the menu and display the placeholder text and a close button.
        %li Clicking on an item inside the overlay menu will not close the widget.
        %li A ghosted, unchecked icon will appear adjacent to each unselected item.  When the item is selected the icon will change to a checkbox.  Neither icon will appear inside a single select box.
        %li Once 2+ items are selected, a counter element with the total number of selected items will appear inside the button.
        %li The text of each selected item will appear inside the button as a list.  If the button is not wide enough to display the entire list, it is truncated with an ellipses.
        %li If no items are selected, the button's text will default to the placeholder text.
        %li If no placeholder element exists, the default button text will be blank and the header will appear with just a close button. Because this isn't a friendly user experience, we recommended that you always specify a placeholder element when using multiple select boxes.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-9"} Choose shipping method(s):
        %select#select-choice-9{"data-native-menu" => "false", :multiple => "multiple", :name => "select-choice-9"}
          %option Choose options
          %option{:value => "standard"} Standard: 7 day
          %option{:value => "rush"} Rush: 3 days
          %option{:value => "express"} Express: next day
          %option{:value => "overnight"} Overnight
      %p
        When a select is large enough to where the menu will open in a new page, the placeholder text is displayed in the button when no items are selected, and the
        %code label
        text is displayed in the menu's header.  This differs from smaller overlay menus where the placeholder text is displayed in both the button and the header, and from full-page single selects where the placeholder text is not used at all.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-10"} Choose state(s):
        %select#select-choice-10{"data-native-menu" => "false", :multiple => "multiple", :name => "select-choice-10"}
          %option Choose options
          %option{:value => "AL"} Alabama
          %option{:value => "AK"} Alaska
          %option{:value => "AZ"} Arizona
          %option{:value => "AR"} Arkansas
          %option{:value => "CA"} California
          %option{:value => "CO"} Colorado
          %option{:value => "CT"} Connecticut
          %option{:value => "DE"} Delaware
          %option{:value => "FL"} Florida
          %option{:value => "GA"} Georgia
          %option{:value => "HI"} Hawaii
          %option{:value => "ID"} Idaho
          %option{:value => "IL"} Illinois
          %option{:value => "IN"} Indiana
          %option{:value => "IA"} Iowa
          %option{:value => "KS"} Kansas
          %option{:value => "KY"} Kentucky
          %option{:value => "LA"} Louisiana
          %option{:value => "ME"} Maine
          %option{:value => "MD"} Maryland
          %option{:value => "MA"} Massachusetts
          %option{:value => "MI"} Michigan
          %option{:value => "MN"} Minnesota
          %option{:value => "MS"} Mississippi
          %option{:value => "MO"} Missouri
          %option{:value => "MT"} Montana
          %option{:value => "NE"} Nebraska
          %option{:value => "NV"} Nevada
          %option{:value => "NH"} New Hampshire
          %option{:value => "NJ"} New Jersey
          %option{:value => "NM"} New Mexico
          %option{:value => "NY"} New York
          %option{:value => "NC"} North Carolina
          %option{:value => "ND"} North Dakota
          %option{:value => "OH"} Ohio
          %option{:value => "OK"} Oklahoma
          %option{:value => "OR"} Oregon
          %option{:value => "PA"} Pennsylvania
          %option{:value => "RI"} Rhode Island
          %option{:value => "SC"} South Carolina
          %option{:value => "SD"} South Dakota
          %option{:value => "TN"} Tennessee
          %option{:value => "TX"} Texas
          %option{:value => "UT"} Utah
          %option{:value => "VT"} Vermont
          %option{:value => "VA"} Virginia
          %option{:value => "WA"} Washington
          %option{:value => "WV"} West Virginia
          %option{:value => "WI"} Wisconsin
          %option{:value => "WY"} Wyoming
      %h2 Data attribute support
      %p You can specify any jQuery Mobile button data- attribute on a select element too. In this example, we're setting the theme, icon and inline properties though data- attributes.
      %div{"data-role" => "fieldcontain"}
        %label.select{:for => "select-choice-11"} Actions
        %select#select-choice-11{"data-icon" => "gear", "data-inline" => "true", "data-native-menu" => "false", "data-theme" => "a", :name => "select-choice-11"}
          %option{:value => "edit"} Edit user
          %option{:value => "delete"} Delete user
      %h2 Refreshing a select
      %p If you manipulate a select via JavaScript, you must call the refresh  method on it to update the visual styling. Here is an example:
      %code
        %pre
          :preserve
            var myselect = $("select#foo");
            myselect[0].selectedIndex = 3;
            myselect.selectmenu("refresh");
  / /content
/ /page

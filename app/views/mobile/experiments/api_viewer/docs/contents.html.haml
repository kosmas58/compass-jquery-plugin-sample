%div{"data-role" => "page"}
  %div{"data-role" => "header"}
    %h1 .contents()
  #contents1{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .contents()
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
    .entry-details
      %p.desc
        %strong> Description:
        Get the children of each element in the set of matched elements, including text nodes.
      %ul.signatures
        %li#contents.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.2/"} 1.2
            \.contents()
      .longdesc
        %p
          Given a jQuery object that represents a set of DOM elements, the
          %code .contents()
          method allows us to search through the immediate children of these elements in the DOM tree and construct a new jQuery object from the matching elements. The
          %code .contents()
          and
          %code .children()
          methods are similar, except that the former includes text nodes as well as HTML elements in the resulting jQuery object.
        %p
          The
          %code .contents()
          method can also be used to get the content document of an iframe, if the iframe is on the same domain as the main page.
        %p
          Consider a simple
          %code &lt;div&gt;
          with a number of text nodes, each of which is separated by two line break elements (
          %code> &lt;br /&gt;
          ):
        %pre
          :preserve
            &lt;div class="container"&gt;
              Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed 
              do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
              &lt;br /&gt;&lt;br /&gt;
              Ut enim ad minim veniam, quis nostrud exercitation ullamco 
              laboris nisi ut aliquip ex ea commodo consequat.
              &lt;br /&gt; &lt;br /&gt;
              Duis aute irure dolor in reprehenderit in voluptate velit 
              esse cillum dolore eu fugiat nulla pariatur.
            &lt;/div&gt;
        %p
          We can employ the
          %code .contents()
          method to help convert this blob of text into three well-formed paragraphs:
        %pre
          :preserve
            
            $('.container').contents().filter(function() {
              return this.nodeType == 3;
            })
              .wrap('&lt;p&gt;&lt;/p&gt;')
            .end()
            .filter('br')
              .remove();
        %p
          This code first retrieves the contents  of
          %code &lt;div class="container"&gt;
          and then filters it for text nodes, which are wrapped in paragraph tags. This is accomplished by testing the
          %a{:href => "http://developer.mozilla.org/en/nodeType"}
            %code .nodeType
            property
          of the element. This DOM property holds a numeric code indicating the node's type; text nodes use the code 3. The contents are again filtered, this time for
          %code &lt;br /&gt;
          elements, and these elements are removed.
      %h3 Examples:
      #entry-examples.entry-examples
        #example-0
          %h4
            Example:
            %span.desc Find all the text nodes inside a paragraph and wrap them with a bold tag.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;p&gt;Hello &lt;a href="http://ejohn.org/"&gt;John&lt;/a&gt;, how are you doing?&lt;/p&gt;
                &lt;script&gt;$("p").contents().filter(function(){ return this.nodeType != 1; }).wrap("&lt;b/&gt;");&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-1
          %h4
            Example:
            %span.desc Change the background colour of links inside of an iframe.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;iframe src="http://api.jquery.com/" width="80%" height="600" id='frameDemo'&gt;&lt;/iframe&gt; 
                &lt;script&gt;$("#frameDemo").contents().find("a").css("background-color","#BADA55");&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo

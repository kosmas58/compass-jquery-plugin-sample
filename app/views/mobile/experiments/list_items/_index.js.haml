%link{:href => "/images/demo/mobile/list-maker-icon.png", :rel => "apple-touch-icon"}/

:css
  .ui-li-has-thumb .ui-btn-inner { min-height: 1em; padding-left: 0.5em; }
  .ui-li-thumb { position: relative; }
  #box { background-repeat: no-repeat; background-clip: none; width: 23px; border: 0px; }

= javascript_include_tag :tmpl, :offline

%script#item_template{:type => "text/x-jquery-tmpl"}
  %li
    {{if list_item.checked }}
    %img#box.ui-icon-checkbox-off.ui-icon-checkbox-on{ :src => "/images/demo/empty.png" }
    {{else}}
    %img#box.ui-icon-checkbox-off{ :src => "/images/demo/empty.png" }
    {{/if}}
    %a#item{ :value => "${list_item.id}", :href => "#" }
      ${list_item.name}
    %a#item_delete{:value => "${list_item.id}", :href => "#", "data-rel" => "dialog", "data-transition" => "pop" }
      Remove ${list_item.name}

%script#item_template_new{:type => "text/x-jquery-tmpl"}
  %li
    %img#box.ui-icon-checkbox-off{ :src => "/images/demo/empty.png" }
    %a#item
      ${list_item.name}
    %a#item_delete{ "data-rel" => "dialog", "data-transition" => "pop" }
      Remove ${list_item.name}

:javascript
  var holdTheInterval;
  
  function itemsRefresh() {
    $.retrieveJSON("/mobile/experiments/list_items?format=json", function(data) {
      //var pendingItems = $.parseJSON(localStorage["pendingItems"]);
      //$("#items").html($("#item_template").tmpl(data.concat(pendingItems))).listview("refresh");
      $("#items").html($("#item_template").tmpl(data)).listview("refresh");
    });
    clearInterval(holdTheInterval);
  };

  function itemCreate(name){
    if (!name || /^\s*$/.test(name)) {
      alert("Name cannot be empty");
    }
    else {
      $.ajax({
        type:        'POST',
        url:         '/mobile/experiments/list_items',
        data:        { 
                       "authenticity_token" : "#{form_authenticity_token}",
                       "list_item"          : { "name" : name }
                     }, 
        dataType:    "json",
        timeout:     1000,
        success:     function(response, status) {
                       itemsRefresh();
                     },
        error:       function(XMLHttpRequest, textStatus, errorThrown) {
                       $("#item_name").val(textStatus);
                     }
      });
    }
  };
  
  function itemUpdate(item, checked){
    $.ajax({
      type:        'PUT',
      url:         '/mobile/experiments/list_items/'+item,
      data:        { 
                     "authenticity_token" : "#{form_authenticity_token}",
                     "list_item"          : { "checked" : checked }
                   }, 
      dataType:    "json",
      timeout:     1000,
      error:       function() {
                     
                   }
    });
  };
  
  function itemDelete(item){
    $.ajax({
      type:        'DELETE',
      url:         '/mobile/experiments/list_items/'+item,
      data:        { 
                     "authenticity_token" : "#{form_authenticity_token}"
                   }, 
      dataType:    "json",
      timeout:     1000,
      error:       function() {
                     
                   }
    });
  };
  
  $(function() {
    if ($.support.localStorage) {
      $(window.applicationCache).bind("error", function() {
        console.log("There was an error when loading the cache manifest.");
      });
      
      if (!localStorage["pendingItems"]) {
        localStorage["pendingItems"] = JSON.stringify([]);
      }
      
      itemsRefresh();
      
      // $("#item_create").submit(function(e) {
      //   var pendingItems = $.parseJSON(localStorage["pendingItems"]);
      //   var item = {"data":$(this).serialize(), "list_item":{"name":$("#item_name").val()}};
      //   $("#item_template").tmpl(item).appendTo("#items");
      //   $("#items").listview("refresh");
      //   pendingItems.push(item);
      //   localStorage["pendingItems"] = JSON.stringify(pendingItems)
      //   $("#item_name").val("");
      //   sendPending();
      //   e.preventDefault();
      // });
      // 
      // function sendPending() {
      //   if (window.navigator.onLine) {
      //     var pendingItems = $.parseJSON(localStorage["pendingItems"]);
      //     if (pendingItems.length > 0) {
      //       var item = pendingItems[0];
      //       $.post("/mobile/experiments/list_items", item.data, function(data) {
      //         var pendingItems = $.parseJSON(localStorage["pendingItems"]);
      //         pendingItems.shift();
      //         localStorage["pendingItems"] = JSON.stringify(pendingItems)
      //         setTimeout(sendPending, 100);
      //       });
      //     }
      //   }
      // }
      // sendPending();
      // $(window).bind("online", sendPending);
    } else {
      alert("Try a different browser.");
    };
  });
  
  $(document).ready(function() {
    $("#item").live('click', function(){
      var item = $(this).attr("value");
      if (item) {
        var box = $(this).parent().children("#box");
        if (box.hasClass("ui-icon-checkbox-on")) {
          box.removeClass("ui-icon-checkbox-on");
          itemUpdate(item, false);
        }
        else {
          box.addClass("ui-icon-checkbox-on");
          itemUpdate(item, true);
        }
      }
    });
    
    $("#item_create").live('click', function(){
      var name = $("#item_name").val();
      itemCreate(name);
      $("#item_name").val("");
      var tmpl = {"data":$(this).serialize(), "list_item":{"name": name}};
      $("#item_template_new").tmpl(tmpl).appendTo("#items");
      $("#items").listview("refresh");
      holdTheInterval = setInterval(itemsRefresh, 5000);
    });
    
    $("#item_delete").live('click', function(){
      var item = $(this).attr("value");
      if (item) {
        itemDelete(item);
        $(this).parent().parent().parent().remove();
        $("#items").listview("refresh");
      }
    });
  });

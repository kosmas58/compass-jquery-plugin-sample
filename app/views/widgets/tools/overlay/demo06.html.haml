-@title = "#{t('txt.tools.name')} - #{t('txt.tools.ui.overlay.name')} - #{t('txt.tools.ui.overlay.demo06')}"
= render :partial => "demo06.js.haml", :format => :js

.demo
  %h3
    =image_tag("icons/22x22/tools.png", :border => 0)
    =@title
  %p
    The following button opens an overlay whose contents are loaded from an external URL:
  / external page is given in the href attribute (as it should be)
  #internal
    %a{:href => "content1", :rel => "#overlay", :style => "text-decoration:none"}
      / remember that you can use any element inside the trigger
      %button{:type => "button"} Show a page in overlay
    / another link. uses the same overlay
    %a{:href => "content2", :rel => "#overlay", :style => "text-decoration:none"}
      %button{:type => "button"}
        Show another page
  %br
  %br
  %p
    Ajax calls cannot retrieve external pages for security reasons.
    But with YQL you can get the pure HTML of the page and display it.
  #external
    %a{:href => "http://jquery.com", :rel => "#overlay2", :style => "text-decoration:none"}
      %button
        Show an really external page

  / overlayed element
  #overlay.apple_overlay
    %a.close
    / the external content is loaded inside this tag
    .contentWrap
  / overlayed element
  
  #overlay2.apple_overlay
    %a.close
    / the external content is loaded inside this tag
    .contentWrap
/ End demo

.demo-description
  #greybox
/ End demo-description

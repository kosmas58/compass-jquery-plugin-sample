-@title = "#{t('txt.tools.name')} - #{t('txt.tools.ui.tooltips.name')} - #{t('txt.tools.ui.tooltips.demo01')}"

- content_for :content_head do
  = render(:partial => "demo01.js.haml", :format => :js)

.demo
  %h3
    =image_tag("icons/22x22/tools.png", :border => 0)
    =@title
  %p
    Here we have four
    %samp
      img
    tags and their
    %samp
      title
    attribute working as the tooltip. This kind of simple syntax will also show the browser's standard
    tooltips even though JavaScript is not enabled. This whole setup can be enabled with one JavaScript
    one-liner.
    
  #tooltip
    %img{:src => "/images/demo/tools/img/1.jpg", :title => "A must have tool for designing better layouts and more intuitive user-interfaces." }      
    .tooltip{:style => "position: absolute; top: -62px; left:  76px; display: none; "}
    %img{:src => "/images/demo/tools/img/2.jpg", :title => "Tooltips can be positioned anywhere relative to the trigger element." }
    .tooltip{:style => "position: absolute; top: -62px; left: 267px; display: none; "}
    %img{:src => "/images/demo/tools/img/3.jpg", :title => "Tooltips can contain any HTML such as links, images, forms, tables, etc." }
    .tooltip{:style => "position: absolute; top: -62px; left: 458px; display: none; "}
    %img{:src => "/images/demo/tools/img/4.jpg", :title => "There are many built-in show/hide effects and you can also make your own." , :style => "margin-right:0px"}
    .tooltip{:style => "position: absolute; top: -62px; left: 649px; display: none; "}
/ End demo

.demo-description 
  #greybox
/ End demo-description

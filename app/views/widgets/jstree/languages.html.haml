-@title = "#{t('txt.jst.name')} - #{t('txt.jst.lang')}"

- content_for :head_scripts do
  = render :partial => "languages.js.haml", :format => :js

.demo
  %h3
    =image_tag("icons/22x22/tree.png", :border => 0)
    =@title
  .span-11.append-13.last
    %h4
      Using the languages plugin with HTML data
    #demo1.ui-widget-content.ui-corner-all
      %ul
        %li#phtml_1
          %a.en{:href => "#"} Root node 1
          %a.bg{:href => "#"} Корен 1
          %ul
            %li#phtml_2
              %a.en{:href => "#"} Child node 1
              %a.bg{:href => "#"} Дете 1
            %li#phtml_3
              %a.en{:href => "#"} Child node 2
              %a.bg{:href => "#"} Дете 2
        %li#phtml_4
          %a.en{:href => "#"} Root node 2
          %a.bg{:href => "#"} Корен 2
  .span-11.append-13.last
    #toolbar.ui-widget-header.ui-corner-all
      %button#en_1
        English
      %button#bg_1
        Bulgarian
      %button#rename_1
        Rename visible language
      %button#rename_2
        Rename 'bg'        
/ End demo
.demo-description
  %p
    The
    %b
      languages plugin
    enables multilanguage trees. This means that each node has a specified number of titles - each in a
    different "language". Only one language set is visible at any given time. This is useful for maintaining
    the same structure in many languages (hence the name of the plugin).
  %p
    Check your data plugin documentation (html_data, xml_data, json_data) or take a close look at these
    examples for information on how to specify multilanguage nodes.
  %p
    = link_to raw("Look here for addtional Documentation"), "http://www.jstree.com/documentation/languages" 
/ End demo-description

-@title = "#{t('txt.jst.name')} - #{t('txt.jst.html')}"

- content_for :head_scripts do
  = render :partial => "html.js.haml", :format => :js

.demo
  %h3
    =image_tag("icons/22x22/tree.png", :border => 0)
    =@title
  .span-11
    %h4
      Using initial content (convert an existing list)
    #demo1.ui-widget-content.ui-corner-all
      %ul
        %li#phtml_1
          %a{:href => "#"} Root node 1
          %ul
            %li#phtml_2
              %a{:href => "#"} Child node 1
            %li#phtml_3
              %a{:href => "#"} Child node 2
        %li#phtml_4
          %a{:href => "#"} Root node 2
  .span-11.prepend-2.last
    %h4
      Using the data config option
    #demo2.ui-widget-content.ui-corner-all
  .span-24
    %br
    %br    
  .span-11
    %h4
      Using the ajax config option
    #demo3.ui-widget-content.ui-corner-all
  .span-11.prepend-2.last
    %h4
      Using both the data &amp; ajax config options
    #demo4.ui-widget-content.ui-corner-all    
/ End demo
.demo-description
  %p
    The 
    %b
      html_data plugin
    enables jsTree to convert nested unordered lists to interactive trees.
    jsTree can also get HTML from the server insert it into the DOM and convert that to a tree.
  %p
    = link_to raw("Look here for addtional Documentation"), "http://www.jstree.com/documentation/html_data"  
/ End demo-description

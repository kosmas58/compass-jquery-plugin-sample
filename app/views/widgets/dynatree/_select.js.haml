:css
  .toolbar{ padding: 0.3em; }
  .ui-button{ font-size: 0.9em; } 

:javascript
  var treeData = [
    {title: "item1 with key and tooltip", tooltip: "Look, a tool tip!" },
    {title: "item2: selected on init", select: true },
    {title: "Folder", isFolder: true, key: "id3",
      children: [
        {title: "Sub-item 3.1",
          children: [
            {title: "Sub-item 3.1.1", key: "id3.1.1" },
            {title: "Sub-item 3.1.2", key: "id3.1.2" }
          ]
        },
        {title: "Sub-item 3.2",
          children: [
            {title: "Sub-item 3.2.1", key: "id3.2.1" },
            {title: "Sub-item 3.2.2", key: "id3.2.2" }
          ]
        }
      ]
    },
    {title: "Documnent with some children (expanded on init)", key: "id4", expand: true,
      children: [
        {title: "Sub-item 4.1 (active on init)", activate: true,
          children: [
            {title: "Sub-item 4.1.1", key: "id4.1.1" },
            {title: "Sub-item 4.1.2", key: "id4.1.2" }
          ]
        },
        {title: "Sub-item 4.2 (selected on init)", select: true,
          children: [
            {title: "Sub-item 4.2.1", key: "id4.2.1" },
            {title: "Sub-item 4.2.2", key: "id4.2.2" }
          ]
        },
        {title: "Sub-item 4.3 (hideCheckbox)", hideCheckbox: true },
        {title: "Sub-item 4.4 (unselectable)", unselectable: true }
      ]
    }
  ];
  
  $(function(){
    $("button", ".demo").button();
    $("#tabs").tabs({
      event: 'mouseover'
    });
    
    // --- Initialize sample trees
    $("#tree1").dynatree({
      checkbox: true,
      // Override class name for checkbox icon:
      classNames: {checkbox: "dynatree-radio"},
      selectMode: 1,
      children: treeData,
      onActivate: function(node) {
        $("#echoActive1").text(node.data.title);
      },
      onSelect: function(select, node) {
        // Display list of selected nodes
        var s = node.tree.getSelectedNodes().join(", ");
        $("#echoSelection1").text(s);
      },
      onDblClick: function(node, event) {
        node.toggleSelect();
      },
      onKeydown: function(node, event) {
        if( event.which == 32 ) {
          node.toggleSelect();
          return false;
        }
      },
      // The following options are only required, if we have more than one tree on one page:
      // initId: "treeData",
      cookieId: "dynatree-Cb1",
      idPrefix: "dynatree-Cb1-"
    });

    $("#tree2").dynatree({
      checkbox: true,
      selectMode: 2,
      children: treeData,
      onSelect: function(select, node) {
        // Display list of selected nodes
        var selNodes = node.tree.getSelectedNodes();
        // convert to title/key array
        var selKeys = $.map(selNodes, function(node){
             return "[" + node.data.key + "]: '" + node.data.title + "'";
        });
        $("#echoSelection2").text(selKeys.join(", "));
      },
      onClick: function(node, event) {
        // We should not toggle, if target was "checkbox", because this
        // would result in double-toggle (i.e. no toggle)
        if( node.getEventTargetType(event) == "title" )
          node.toggleSelect();
      },
      onKeydown: function(node, event) {
        if( event.which == 32 ) {
          node.toggleSelect();
          return false;
        }
      },
      // The following options are only required, if we have more than one tree on one page:
      cookieId: "dynatree-Cb2",
      idPrefix: "dynatree-Cb2-"
    });

    $("#tree3").dynatree({
      checkbox: true,
      selectMode: 3,
      children: treeData,
      onSelect: function(select, node) {
        // Get a list of all selected nodes, and convert to a key array:
        var selKeys = $.map(node.tree.getSelectedNodes(), function(node){
          return node.data.key;
        });
        $("#echoSelection3").text(selKeys.join(", "));

        // Get a list of all selected TOP nodes
        var selRootNodes = node.tree.getSelectedNodes(true);
        // ... and convert to a key array:
        var selRootKeys = $.map(selRootNodes, function(node){
          return node.data.key;
        });
        $("#echoSelectionRootKeys3").text(selRootKeys.join(", "));
        $("#echoSelectionRoots3").text(selRootNodes.join(", "));
      },
      onDblClick: function(node, event) {
        node.toggleSelect();
      },
      onKeydown: function(node, event) {
        if( event.which == 32 ) {
          node.toggleSelect();
          return false;
        }
      },
      // The following options are only required, if we have more than one tree on one page:
      // initId: "treeData",
      cookieId: "dynatree-Cb3",
      idPrefix: "dynatree-Cb3-"
    });

    $("#tree4").dynatree({
      checkbox: false,
      selectMode: 2,
      children: treeData,
      onQuerySelect: function(select, node) {
        if( node.data.isFolder )
          return false;
      },
      onSelect: function(select, node) {
        // Display list of selected nodes
        var selNodes = node.tree.getSelectedNodes();
        // convert to title/key array
        var selKeys = $.map(selNodes, function(node){
             return "[" + node.data.key + "]: '" + node.data.title + "'";
        });
        $("#echoSelection4").text(selKeys.join(", "));
      },
      onClick: function(node, event) {
        if( ! node.data.isFolder )
          node.toggleSelect();
      },
      onDblClick: function(node, event) {
        node.toggleExpand();
      },
      onKeydown: function(node, event) {
        if( event.which == 32 ) {
          node.toggleSelect();
          return false;
        }
      },
      // The following options are only required, if we have more than one tree on one page:
      // initId: "treeData",
      cookieId: "dynatree-Cb4",
      idPrefix: "dynatree-Cb4-"
    });

    $("#btnToggleSelect").click(function(){
      $("#tree2").dynatree("getRoot").visit(function(node){
        node.toggleSelect();
      });
      return false;
    });
    $("#btnDeselectAll").click(function(){
      $("#tree2").dynatree("getRoot").visit(function(node){
        node.select(false);
      });
      return false;
    });
    $("#btnSelectAll").click(function(){
      $("#tree2").dynatree("getRoot").visit(function(node){
        node.select(true);
      });
      return false;
    });
    
    $("#skinCombo")
    .val(0) // set state to prevent caching
    .change(function(){
      var href = "../src/"
        + $(this).val()
        + "/ui.dynatree.css"
        + "?reload=" + new Date().getTime();
      $("#skinSheet").attr("href", href);
    });
    
  });


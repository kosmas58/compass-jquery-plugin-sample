!!!
%html
  %head
    %meta{:content => "text/html; charset=utf-8", "http-equiv" => "Content-Type"}/
    %title
      History.js &lt; BrowserState Suite
  %body{:style => "padding-bottom:40px"}
    / Scripts
    :javascript
      if ( typeof JSON === 'undefined' ) {
      	var
      		url = '../scripts/uncompressed/json2.js',
      		scriptEl = document.createElement('script');
      	scriptEl.type = 'text/javascript';
      	scriptEl.src = url;
      	document.body.appendChild(scriptEl,document.body.firstChild);
      }
	    %script{:src => "../vendor/jquery.js", :type => "text/javascript"}
    %script{:src => "../scripts/compressed/history.adapter.jquery.js", :type => "text/javascript"}
    %script{:src => "../scripts/compressed/history.js", :type => "text/javascript"}
    %script{:src => "../scripts/compressed/history.html4.js", :type => "text/javascript"}
    / HTML
    #wrap
      / Intro
      %h1
        %a{:href => "https://github.com/balupton/History.js"} History.js
        by
        %a{:href => "http://balupton.com"} Benjamin Lupton
      %p
        History.js gracefully supports the
        %a{:href => "https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history"} HTML5 History/State APIs
        (pushState, replaceState, onPopState) in all browsers. Including continued support for data, titles, replaceState. Supports
        = succeed "," do
          %a{:href => "http://jquery.com/"} jQuery
        %a{:href => "http://mootools.net"} MooTools
        and
        = succeed "." do
          %a{:href => "http://prototypejs.org"} Prototype
        For HTML5 browsers this means that you can modify the URL directly, without needing to use hashes anymore. For HTML4 browsers it will revert back to using the old onhashchange functionality.
      / Textarea for Logging
      %textarea#log{:style => "width:100%;height:400px"}
      / Note
      %p
        Click through the buttons in order and you'll get the results demonstrated in the
        %a{:href => "../README.md"} README.md
        file.
      / Buttons
      %ul#buttons
      / Subscribe to Updates
      %h3{:style => "margin-top:30px"} Subscribe to Updates
      %p You'll be the first to know when new releases come out. Yes this form actually works, it just isn't styled yet to keep things simple.
      %form#subForm{:action => "http://balupton.createsend.com/t/r/s/phujuu/", :method => "post"}
        %div
          %label{:for => "name"} Name:
          %input#name{:name => "cm-name", :type => "text"}/
          %br/
          %label{:for => "phujuu-phujuu"} Email:
          %input#phujuu-phujuu{:name => "cm-phujuu-phujuu", :type => "text"}/
          %br/
          %label{:for => "Website"} Website:
          %input#Website{:name => "cm-f-kjqtu", :type => "text"}/
          %br/
          %input{:type => "submit", :value => "Subscribe"}/
      / Our Script
      :javascript
        (function(window,undefined){

        	// Establish Variables
        	var
        		History = window.History // Note: We are using a capital H instead of a lower h
        		;

        	// Bind to State Change
        	History.Adapter.bind(window,'statechange',function(){ // Note: We are using statechange instead of popstate
        		// Log the State
        		var State = History.getState(); // Note: We are using History.getState() instead of event.state
        		History.log('statechange:', State.data, State.title, State.url);
        	});

        	// Prepare Buttons
        	var
        		buttons = document.getElementById('buttons'),
        		scripts = [
        			'History.pushState({state:1}, "State 1", "?state=1"); // logs {state:1}, "State 1", "?state=1"',
        			'History.pushState({state:2}, "State 2", "?state=2"); // logs {state:2}, "State 2", "?state=2"',
        			'History.replaceState({state:3}, "State 3", "?state=3"); // logs {state:3}, "State 3", "?state=3"',
        			'History.pushState(null, null, "?state=4"); // logs {}, "", "?state=4"',
        			'History.back(); // logs {state:3}, "State 3", "?state=3"',
        			'History.back(); // logs {state:1}, "State 1", "?state=1"',
        			'History.back(); // logs {}, "The page you started at", "?"',
        			'History.go(2); // logs {state:3}, "State 3", "?state=3"'
        		],
        		buttonsHTML = ''
        		;

        	// Add Buttons
        	for ( var i=0,n=scripts.length; i<n; ++i ) {
        		var _script = scripts[i];
        		buttonsHTML +=
        			''+_script+'';
        	}
        	buttons.innerHTML = buttonsHTML;

        })(window);
		
-@title = "#{t('txt.ui.name')} #{t('txt.ui.interactions.sortable.default')} - #{t('txt.ui.interactions.sortable.connect-lists')}"
= render :partial => "connect_lists.js.haml", :format => :js

.demo
  %h3
    =image_tag("icons/22x22/jquery-ui.png", :border => 0)
    =@title
  %ul#sortable1.connectedSortable
    %li.ui-state-default
      Item 1
    %li.ui-state-default
      Item 2
    %li.ui-state-default
      Item 3
    %li.ui-state-default
      Item 4
    %li.ui-state-default
      Item 5
  %ul#sortable2.connectedSortable
    %li.ui-state-highlight
      Item 1
    %li.ui-state-highlight
      Item 2
    %li.ui-state-highlight
      Item 3
    %li.ui-state-highlight
      Item 4
    %li.ui-state-highlight
      Item 5
/ End demo
.demo-description
  %p
    Sort items from one list into another and vice versa, by passing a selector into
    the
    %code
      connectWith
    option. The simplest way to do this is to
    group all related lists with a CSS class, and then pass that class into the
    sortable function (i.e.,
    %code
      connectWith: '.myclass'
    ).
/ End demo-description

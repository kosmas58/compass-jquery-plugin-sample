-@title = "#{t('txt.ui.name')} #{t('txt.ui.widgets.slider.default')} - #{t('txt.ui.widgets.slider.side-scroll')}"
= render :partial => "side_scroll.js.haml", :format => :js

.demo
  %h3
    =image_tag("icons/22x22/jquery-ui.png", :border => 0)
    =@title
  .scroll-pane.ui-widget.ui-widget-header.ui-corner-all
    .scroll-content
      .scroll-content-item.ui-widget-header
        1
      .scroll-content-item.ui-widget-header
        2
      .scroll-content-item.ui-widget-header
        3
      .scroll-content-item.ui-widget-header
        4
      .scroll-content-item.ui-widget-header
        5
      .scroll-content-item.ui-widget-header
        6
      .scroll-content-item.ui-widget-header
        7
      .scroll-content-item.ui-widget-header
        8
      .scroll-content-item.ui-widget-header
        9
      .scroll-content-item.ui-widget-header
        10
      .scroll-content-item.ui-widget-header
        11
      .scroll-content-item.ui-widget-header
        12
      .scroll-content-item.ui-widget-header
        13
      .scroll-content-item.ui-widget-header
        14
      .scroll-content-item.ui-widget-header
        15
      .scroll-content-item.ui-widget-header
        16
      .scroll-content-item.ui-widget-header
        17
      .scroll-content-item.ui-widget-header
        18
      .scroll-content-item.ui-widget-header
        19
      .scroll-content-item.ui-widget-header
        20
    .scroll-bar-wrap.ui-widget-content.ui-corner-bottom
      .scroll-bar
/ End demo

.demo-description
  %p
    Use a slider to manipulate the positioning of content on the page. In this case,
    it acts as a scrollbar with the potential to capture values if needed.
/ End demo-description
